# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
header_name {.h} 
code_name {.cxx}
decl {\#pragma warning( disable : 4311 4312 4244 4267 4800)} {public global
} 

decl {class ModelViewController;} {public global
} 

class GUI {open
} {
  Function {GUI()} {open
  } {
    Fl_Window mainWindow {
      label {RepSnapper by Kulitorum www.kulitorum.com} open
      xywh {362 175 1400 858} type Double box UP_BOX color 39 selection_color 39 labelsize 12 hide resizable
    } {
      Fl_Box MVC {
        label {An instace of ModelViewController}
        xywh {10 25 820 825} box UP_BOX align 16
        code0 {\#include "stdafx.h"}
        code1 {\#ifndef M_PI
\#define M_PI 3.14159265358979323846
\#endif}
        class ModelViewController
      }
      Fl_Tabs Tabs {open
        xywh {835 25 560 825} align 5
      } {
        Fl_Group {} {
          label {Input file}
          xywh {835 45 550 785} hide
        } {
          Fl_Button {} {
            label {Load STL}
            callback {Fl_File_Chooser chooser("C:/code/printed-parts", "*.stl", Fl_File_Chooser::SINGLE, "Choose GCode");
chooser.show();
while (chooser.shown())
	Fl::wait();
if(chooser.value() == 0)
	return;
std::string dir(chooser.value());


if(dir.length())
{
MVC->ReadStl(dir);
MVC->redraw();
};}
            xywh {845 55 130 25}
          }
          Fl_Light_Button FixSTLerrorsButton {
            label {Fix STL errors}
            callback {MVC->redraw()}
            xywh {1115 55 135 25} value 1 selection_color 63
          }
          Fl_Button {} {
            label {Save STL}
            callback {Fl_File_Chooser chooser("C:/code/printed-parts", "*.stl", Fl_File_Chooser::SINGLE, "Choose GCode");
chooser.show();
while (chooser.shown())
	Fl::wait();
if(chooser.value() == 0)
	return;
std::string dir(chooser.value());


if(dir.length())
{
MVC->ReadStl(dir);
MVC->redraw();
};}
            xywh {975 55 135 25} deactivate
          }
          Fl_Group {} {
            label {Object rotation} open
            xywh {840 780 535 50} box FLAT_BOX color 39
          } {
            Fl_Button AutoRotateButton {
              label {Auto rotate}
              callback {MVC->OptimizeRotation();
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {850 790 125 25}
            }
            Fl_Button RotateXButton {
              label {Rotate X}
              callback {MVC->RotateObject(1,0,0, (float)(M_PI/4));
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {980 790 125 25}
            }
            Fl_Button RotateYButton {
              label {Rotate Y}
              callback {MVC->RotateObject(0,1,0, (float)(M_PI/4));
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {1110 790 125 25}
            }
            Fl_Button RotateZButton {
              label {Rotate Z}
              callback {MVC->RotateObject(0,0,1, (float)(M_PI/4));
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {1240 790 125 25}
            }
          }
          Fl_Button {} {
            label {Save settings}
            callback {Fl_Text_Buffer* buffer = GCodeStart->buffer();
char* pText = buffer->text();
MVC->ProcessControl.GCodeStartText = string(pText);
free(pText);
buffer = GCodeLayer->buffer();
pText = buffer->text();
MVC->ProcessControl.GCodeLayerText = string(pText);
free(pText);
buffer = GCodeEnd->buffer();
pText = buffer->text();
MVC->ProcessControl.GCodeEndText = string(pText);
free(pText);
MVC->ProcessControl.SaveXML();}
            xywh {1250 55 135 25}
          }
          Fl_Group {} {
            label {Lua script} open
            xywh {845 575 535 190} box ENGRAVED_FRAME color 39
          } {
            Fl_Text_Editor LuaScriptEditor {
              label {LUA script:}
              xywh {850 610 525 150} align 5
              code0 {Fl_Text_Buffer *luascript = new Fl_Text_Buffer();}
              code1 {o->buffer(luascript);}
            }
            Fl_Button RunLuaButton {
              label Run
              callback {MVC->RunLua(LuaScriptEditor->buffer()->text());}
              xywh {1250 580 125 25}
            }
          }
          Fl_Button {} {
            label {Load RFO}
            callback {Fl_File_Chooser chooser("C:/code/printed-parts", "*.xml", Fl_File_Chooser::SINGLE, "Choose RFO file");
chooser.show();
while (chooser.shown())
	Fl::wait();
if(chooser.value() == 0)
	return;
std::string dir(chooser.value());


if(dir.length())
{
MVC->ReadRFO(dir);
MVC->redraw();
};}
            xywh {845 85 130 25}
          }
          Fl_Box RFP_Browser {
            label {RFO file}
            callback {MVC->redraw();}
            xywh {845 115 355 440} box UP_BOX align 16 when 1 resizable
            code0 {\#include "Flu_Tree_Browser.h"}
            class Flu_Tree_Browser
          }
          Fl_Group {} {
            label Translate open
            xywh {1205 185 180 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input TranslateX {
              label X
              callback {MVC->Translate("X", o->value());}
              xywh {1220 196 45 23} minimum -300 maximum 300 step 0.1
            }
            Fl_Value_Input TranslateY {
              label Y
              callback {MVC->Translate("Y", o->value());}
              xywh {1280 197 45 23} minimum -300 maximum 300 step 0.1
            }
            Fl_Value_Input TranslateZ {
              label Z
              callback {MVC->Translate("Z", o->value());}
              xywh {1335 197 45 23} minimum -300 maximum 300 step 0.01
            }
          }
          Fl_Group {} {
            label Rotate open
            xywh {1205 250 180 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input RotateX {
              label X
              callback {MVC->RotateObject(1,0,0, o->value());}
              xywh {1220 261 45 23} minimum -360 maximum 360 step 1
            }
            Fl_Value_Input RotateY {
              label Y
              callback {MVC->RotateObject(0,1,0, o->value());}
              xywh {1280 262 45 23} minimum -360 maximum 360 step 1
            }
            Fl_Value_Input RotateZ {
              label Z
              callback {MVC->RotateObject(0,0,1, o->value());}
              xywh {1335 262 45 23} minimum -360 maximum 360 step 1
            }
          }
          Fl_Group {} {
            label Scale open
            xywh {1205 310 180 70} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input ScaleX {
              label X
              callback {MVC->Scale("X", o->value());}
              xywh {1220 321 45 23} minimum -100 maximum 100 step 0.01 value 1
            }
            Fl_Value_Input ScaleY {
              label Y
              callback {MVC->Scale("Y", o->value());}
              xywh {1280 322 45 23} minimum -100 maximum 100 step 0.01 value 1
            }
            Fl_Value_Input ScaleZ {
              label Z
              callback {MVC->Scale("Z", o->value());}
              xywh {1335 322 45 23} minimum -100 maximum 100 step 0.01 value 1
            }
            Fl_Light_Button ScaleAllAxies {
              label {All axis}
              xywh {1220 350 160 20} value 1 selection_color 2
            }
          }
          Fl_Input FileLocationInput {
            label {File location}
            callback {MVC->setFileLocation(o->value());}
            xywh {1205 441 180 24} align 5
          }
          Fl_Input FileTypeInput {
            label Filetype
            callback {MVC->setFileType(o->value());}
            xywh {1205 486 180 24} align 5
          }
          Fl_Input FileMaterialInput {
            label {File material}
            callback {MVC->setFileMaterial(o->value());}
            xywh {1205 531 180 24} align 5
          }
          Fl_Input ObjectNameInput {
            label {Object name}
            callback {MVC->setObjectname(o->value());}
            xywh {1205 396 180 24} align 5
          }
          Fl_Button {} {
            label {New RFO Object}
            callback {MVC->newObject();}
            xywh {975 85 135 25}
          }
          Fl_Button {} {
            label {Save RFO}
            callback {MVC->ProcessControl.rfo.Save(string("test.xml"), MVC->ProcessControl);}
            xywh {1250 85 135 25}
          }
          Fl_Button {} {
            label Delete
            callback {MVC->ProcessControl.rfo.DeleteSelected();}
            xywh {1115 85 135 25}
          }
          Fl_Button {} {
            label Duplicate
            callback {MVC->Duplicate();}
            xywh {1250 115 135 25}
          }
        }
        Fl_Group {} {
          label {Printer definition}
          xywh {835 45 550 785} hide
        } {
          Fl_Group {} {
            label {Build volume (mm)} open
            xywh {840 70 230 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input VolumeX {
              label X
              xywh {860 81 45 23} maximum 5000 step 1 value 200
            }
            Fl_Value_Input VolumeY {
              label Y
              xywh {935 81 45 23} maximum 5000 value 200
            }
            Fl_Value_Input VolumeZ {
              label Z
              xywh {1010 81 45 23} maximum 5000 value 140
            }
          }
          Fl_Group {} {
            label {Print margin  (mm)} open
            xywh {1150 70 235 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input MarginX {
              label X
              callback {MVC->SetPrintMargin("X", o->value());}
              xywh {1175 81 45 23} maximum 100 step 1 value 10
            }
            Fl_Value_Input MarginY {
              label Y
              callback {MVC->SetPrintMargin("Y", o->value());}
              xywh {1250 81 45 23} maximum 100 step 1 value 10
            }
            Fl_Value_Input MarginZ {
              label Y
              callback {MVC->SetPrintMargin("Z", o->value());}
              xywh {1320 82 45 23} minimum -50 maximum 100 step 0.01
            }
          }
          Fl_Group {} {
            label Acceleration open
            xywh {840 685 535 80} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider distanceToReachFullSpeedSlider {
              label {Distance used to read full speed(mm)}
              callback {MVC->SetDistanceToReachFullSpeed(o->value())}
              xywh {850 735 515 20} type {Horz Knob} selection_color 2 align 5 maximum 10 value 0.1 textsize 14
            }
            Fl_Light_Button EnableAccelerationButton {
              label {Enable Acceleration}
              callback {MVC->SetEnableAcceleration(o->value());
if(o->value())
{
distanceToReachFullSpeedSlider->activate();
}
else
{
distanceToReachFullSpeedSlider->deactivate();
}}
              xywh {850 695 255 20} selection_color 63
            }
          }
          Fl_Group {} {
            label {Print speeds}
            xywh {840 485 535 170} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider MaxPrintSpeedXYSlider {
              label {Max PrintSpeed XY (mm/minute)}
              callback {MVC->SetMaxPrintSpeedXY(o->value());}
              xywh {850 545 515 20} type {Horz Knob} selection_color 2 align 5 maximum 8000 step 100 value 4000 textsize 14
            }
            Fl_Value_Slider MinPrintSpeedZSlider {
              label {Min PrintSpeed Z (mm/minute)}
              callback {MVC->SetMinPrintSpeedZ(o->value());}
              xywh {850 585 515 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 2500 step 10 value 50 textsize 14
            }
            Fl_Value_Slider MinPrintSpeedXYSlider {
              label {Min PrintSpeed XY (mm/minute)}
              callback {MVC->SetMinPrintSpeedXY(o->value());}
              xywh {850 505 515 20} type {Horz Knob} selection_color 2 align 5 maximum 8000 step 100 value 1000 textsize 14
            }
            Fl_Value_Slider MaxPrintSpeedZSlider {
              label {Max PrintSpeed Z (mm/minute)}
              callback {MVC->SetMaxPrintSpeedZ(o->value());}
              xywh {850 625 515 20} type {Horz Knob} selection_color 2 align 5 maximum 2500 step 10 value 150 textsize 14
            }
          }
          Fl_Group {} {
            label Extruder open
            xywh {840 140 535 220} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider ExtrudedMaterialWidthSlider {
              label {Extruded material width}
              callback {MVC->SetExtrudedMaterialWidth(o->value());}
              xywh {850 235 515 20} type {Horz Knob} selection_color 2 align 5 maximum 10 value 0.7 textsize 14
            }
            Fl_Value_Slider extrusionFactorSlider {
              label {Extrusion multiplier}
              callback {MVC->SetExtrusionFactor(o->value());}
              xywh {850 275 515 20} type {Horz Knob} selection_color 2 align 5 maximum 2 value 1 textsize 14
            }
            Fl_Light_Button UseIncrementalEcodeButton {
              label {Use incremental ecode (for seperate extruder controller)}
              callback {MVC->SetUseIncrementalEcode(o->value());}
              xywh {850 150 515 20} selection_color 63
            }
            Fl_Value_Slider LayerThicknessSlider {
              label {Layer Thickness}
              callback {MVC->SetLayerThickness(o->value());}
              xywh {850 315 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 0.4 textsize 14
            }
            Fl_Light_Button Use3DGcodeButton {
              label {Use 3D Gcode (for non-stepper extruders)}
              callback {MVC->SetUse3DGcode(o->value());}
              xywh {850 180 515 20} selection_color 63
            }
          }
          Fl_Group {} {
            label Port open
            xywh {840 785 535 45} box ENGRAVED_FRAME color 39
          } {
            Fl_Input portInput {
              label {Port:}
              callback {MVC->setPort(o->value());}
              tooltip {COM3 or  /dev/ttyUSB0 or something to that effect} xywh {1010 796 205 24}
            }
          }
          Fl_Group {} {
            label {Shrinking quality} open
            xywh {840 390 535 55} box ENGRAVED_FRAME color 2
          } {
            Fl_Light_Button shrinkFastButton {
              label {Fast, can have errors (rarely)}
              callback {if(o->value())
{
MVC->SetShrinkQuality("Fast");
MVC->redraw();
shrinkNiceButton->value(0);
}}
              xywh {855 410 250 20} type Radio selection_color 2
            }
            Fl_Group {} {open
              xywh {1115 410 250 20}
            } {
              Fl_Light_Button shrinkNiceButton {
                label {Much slower, perfekt, small details}
                callback {if(o->value())
{
MVC->SetShrinkQuality("nice");
MVC->redraw();
shrinkFastButton->value(0);
}}
                xywh {1115 410 250 20} type Radio color 47 selection_color 2
              }
            }
          }
        }
        Fl_Group {} {
          label Infill
          xywh {835 45 540 755} hide
        } {
          Fl_Group {} {
            label Infill open
            xywh {840 70 535 170} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider InfillRotationSlider {
              label Rotation
              callback {MVC->SetInfillRotation(o->value());}
              xywh {850 130 515 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 45 textsize 14
            }
            Fl_Value_Slider InfillRotationPrLayerSlider {
              label {InFill Rotation pr. Layer}
              callback {MVC->SetInfillRotationPrLayer(o->value());}
              xywh {850 170 515 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 90 textsize 14
            }
            Fl_Value_Slider InfillDistanceSlider {
              label {Infill Distance}
              callback {MVC->SetInfillDistance(o->value());}
              xywh {850 210 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
            }
            Fl_Light_Button ShellOnlyButton {
              label {Shell Only - no infill}
              callback {MVC->SetShellOnly(o->value());}
              xywh {850 90 255 20} selection_color 63
            }
            Fl_Value_Slider ShellCountSlider {
              label {Shell count}
              callback {MVC->SetShellCount(o->value());}
              xywh {1110 90 255 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 10 step 1 value 1 textsize 14
            }
          }
        }
        Fl_Group {} {
          label Raft
          xywh {835 45 540 765} color 47 hide
        } {
          Fl_Group {} {
            label Base open
            xywh {835 225 535 270} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider RaftMaterialPrDistanceRatioSlider {
              label {Material pr. distance ratio}
              callback {MVC->SetRaftMaterialPrDistanceRatio(o->value());}
              xywh {845 290 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1.75 textsize 14
            }
            Fl_Value_Slider RaftRotationSlider {
              label Rotation
              callback {MVC->SetRaftRotation(o->value());}
              xywh {845 330 515 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 90 textsize 14
            }
            Fl_Value_Slider RaftBaseDistanceSlider {
              label {Distance between lines}
              callback {MVC->SetRaftBaseDistance(o->value());}
              tooltip {Distance between the base layer's lines} xywh {845 375 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
            }
            Fl_Value_Slider RaftBaseThicknessSlider {
              label {Thinkness ratio}
              callback {MVC->SetRaftBaseThickness(o->value());}
              tooltip {How much thicker or thinner then a normal layer should the raft base be.} xywh {845 420 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1 textsize 14
            }
            Fl_Value_Slider RaftBaseLayerCountSlider {
              label {Number of Base layers}
              callback {MVC->SetRaftBaseLayerCount(o->value());}
              xywh {845 250 515 20} type {Horz Knob} selection_color 2 align 5 maximum 5 step 1 value 1 textsize 14
            }
            Fl_Value_Slider RaftBaseTemperatureSlider {
              label {Temperature ratio}
              callback {MVC->SetRaftBaseTemperature(o->value());}
              tooltip {To make the flow better, you may want to print the base layers hotter then the rest of the print.} xywh {845 465 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 value 1.1 textsize 14
            }
          }
          Fl_Group {} {
            label Size open
            xywh {835 150 535 55} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider RaftSizeSlider {
              label {Larger then objects (mm)}
              callback {MVC->SetRaftSize(o->value());}
              tooltip {How much larget then the print should the Raft be.} xywh {845 175 515 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 50 value 1.33 textsize 14
            }
          }
          Fl_Group {} {
            label Interface open
            tooltip {This is the layer(s) connecting to the print itself. Unlike the Base layer, they should be "nice" and with a normal extrusion ratio.} xywh {835 525 535 285} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider RaftInterfaceMaterialPrDistanceRatioSlider {
              label {Material pr. distance ratio}
              callback {MVC->SetRaftInterfaceMaterialPrDistanceRatio(o->value());}
              xywh {845 600 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1 textsize 14
            }
            Fl_Value_Slider RaftRotationPrLayerSlider {
              label {Rotation pr. layer}
              callback {MVC->SetRaftRotationPrLayer(o->value());}
              xywh {845 645 515 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 90 textsize 14
            }
            Fl_Value_Slider RaftInterfaceDistanceSlider {
              label {Distance between lines}
              callback {MVC->SetRaftInterfaceDistance(o->value());}
              tooltip {Distance between the base layer's lines} xywh {845 690 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
            }
            Fl_Value_Slider RaftInterfaceThicknessSlider {
              label {Thinkness ratio}
              callback {MVC->SetRaftBaseThickness(o->value());}
              tooltip {How much thicker or thinner then a normal layer should the raft base be.} xywh {845 735 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1 textsize 14
            }
            Fl_Value_Slider RaftInterfaceLayerCountSlider {
              label {Number of interface layers}
              callback {MVC->SeRaftInterfaceLayerCount(o->value());}
              xywh {845 555 515 20} type {Horz Knob} selection_color 2 align 5 maximum 5 step 1 value 2 textsize 14
            }
            Fl_Value_Slider RaftInterfaceTemperatureSlider {
              label {Temperature ratio}
              callback {MVC->SetRaftInterfaceTemperature(o->value());}
              tooltip {To make the flow better, you may want to print the base layers hotter then the rest of the print.} xywh {845 780 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 value 1.1 textsize 14
            }
          }
          Fl_Group {} {
            label Size open
            xywh {835 65 535 55} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button RaftEnableButton {
              label Enable
              callback {MVC->SetRaftEnable(o->value());
MVC->redraw();}
              xywh {840 85 255 25}
            }
            Fl_Light_Button {} {
              label Preview
              callback {MVC->SetApronPreview(o->value());}
              xywh {1100 85 255 25} deactivate
            }
          }
        }
        Fl_Group {} {
          label GCode
          xywh {835 45 555 792} hide
        } {
          Fl_Button {} {
            label {Load Gcode}
            callback {Fl_File_Chooser chooser("\\\\", "*.gcode", Fl_File_Chooser::SINGLE, "Choose GCode");
chooser.show();
while (chooser.shown())
	Fl::wait();
if(chooser.value() == 0)
	return;
std::string dir(chooser.value());


if(dir.length())
{
MVC->ReadGCode(dir);
MVC->redraw();
};}
            xywh {835 95 145 25}
            code0 {\#include <FL/Fl_File_Chooser.H>}
          }
          Fl_Output GCodeLengthText {
            xywh {985 96 225 24}
          }
          Fl_Button {} {
            label {Convert to GCode}
            callback {MVC->ConvertToGCode();}
            xywh {835 65 145 25}
          }
          Fl_Tabs {} {
            xywh {835 125 555 710} color 66 selection_color 31
          } {
            Fl_Text_Editor GCodeStart {
              label Start
              xywh {835 145 555 690} selection_color 31
              code0 {Fl_Text_Buffer *startbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(startbuff);}
            }
            Fl_Text_Editor GCodeLayer {
              label {Next layer}
              xywh {835 145 555 690} selection_color 31 hide
              code0 {Fl_Text_Buffer *layerbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(layerbuff);}
            }
            Fl_Text_Editor GCodeEnd {
              label {End code}
              xywh {835 145 555 690} selection_color 31 hide
              code0 {Fl_Text_Buffer *endbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(endbuff);}
            }
            Fl_Text_Editor GCodeResult {
              label Result
              xywh {835 145 555 690} selection_color 31 hide
              code0 {Fl_Text_Buffer *resultbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(resultbuff);}
            }
          }
          Fl_Button {} {
            label {Save Gcode}
            callback {Fl_File_Chooser chooser("\\\\", "*.gcode", Fl_File_Chooser::CREATE, "Choose filename");
chooser.show();
while (chooser.shown())
	Fl::wait();
if(chooser.value() == 0)
	return;
std::string dir(chooser.value());


if(dir.length())
{
Fl_Text_Buffer *buffer = GCodeResult->buffer();

int result = buffer->savefile(chooser.value());

switch(result)
{
case 0:	// Succes
break;
case 1:	//Open for write failed
fl_alert("Error saving GCode file, error creating file.", "OK");
break;
case 2: // Partially saved file
fl_alert("Error saving GCode file, while writing file, is the disk full?.", "OK");
break;
}

MVC->redraw();
};}
            xywh {1215 95 145 25}
            code0 {\#include <FL/Fl_File_Chooser.H>}
          }
        }
        Fl_Group {} {
          label Rendering
          xywh {835 45 540 755} color 47 hide
        } {
          Fl_Group {} {
            label {STL rendering} open
            xywh {835 75 535 305} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button DisplayPolygonsButton {
              label {Display Polygons}
              callback {MVC->SetDisplayPolygons(o->value());}
              xywh {870 85 220 20} value 1 selection_color 63
            }
            Fl_Light_Button DisplayWireframeButton {
              label {Display Wireframe}
              callback {MVC->SetDisplayWireframe(o->value());}
              xywh {1135 85 140 20} selection_color 63
            }
            Fl_Light_Button DisplayNormalsButton {
              label {Display Normals}
              callback {MVC->SetDisplayNormals(o->value());}
              xywh {870 210 220 20} selection_color 63
            }
            Fl_Light_Button DisplayEndpointsButton {
              label {Display Endpoints}
              callback {MVC->SetDisplayEndpoints(o->value());}
              xywh {1135 210 220 20} selection_color 63
            }
            Fl_Value_Slider PolygonValSlider {
              label Val
              callback {MVC->SetPolygonVal(o->value());
MVC->redraw();}
              xywh {870 150 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider PolygonSatSlider {
              label Sat
              callback {MVC->SetPolygonSat(o->value());
MVC->redraw();}
              xywh {870 130 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider PolygonHueSlider {
              label Hue
              callback {MVC->SetPolygonHue(o->value());
MVC->redraw();}
              xywh {870 110 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider WireframeValSlider {
              label Val
              callback {MVC->SetWireframeVal(o->value());
MVC->redraw();}
              xywh {1135 150 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider WireframeSatSlider {
              label Sat
              callback {MVC->SetWireframeSat(o->value());
MVC->redraw();}
              xywh {1135 130 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider WireframeHueSlider {
              label Hue
              callback {MVC->SetWireframeHue(o->value());
MVC->redraw();}
              xywh {1135 110 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider NormalValSlider {
              label Val
              callback {MVC->SetNormalsVal(o->value());
MVC->redraw();}
              xywh {870 275 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider NormalSatSlider {
              label Sat
              callback {MVC->SetNormalsSat(o->value());
MVC->redraw();}
              xywh {870 255 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider NormalHueSlider {
              label Hue
              callback {MVC->SetNormalsHue(o->value());
MVC->redraw();}
              xywh {870 235 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider EndpointValSlider {
              label Val
              callback {MVC->SetEndpointsVal(o->value());
MVC->redraw();}
              xywh {1135 275 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider EndpointSatSlider {
              label Sat
              callback {MVC->SetEndpointsSat(o->value());
MVC->redraw();}
              xywh {1135 255 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider EndpointHueSlider {
              label Hue
              callback {MVC->SetEndpointsHue(o->value());
MVC->redraw();}
              xywh {1135 235 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Light_Button DisplayBBoxButton {
              label {Display Bounding Box}
              callback {MVC->SetDisplayBBox(o->value());}
              xywh {870 355 220 20} selection_color 63
            }
            Fl_Value_Slider HighlightSlider {
              label Highlight
              callback {MVC->SetHighlight(o->value());
MVC->redraw();}
              xywh {1135 355 220 20} type {Horz Knob} selection_color 2 align 5 value 0.5 textsize 14
            }
            Fl_Value_Slider NormalLengthSlider {
              label {Normals length}
              callback {MVC->SetNormalsLength(o->value());
MVC->redraw();}
              xywh {870 315 220 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 30 step 0.1 value 10 textsize 14
            }
            Fl_Value_Slider EndpointSizeSlider {
              label {Endpoints size}
              callback {MVC->SetEndPointSize(o->value());
MVC->redraw();}
              xywh {1135 315 220 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 20 step 0.1 value 8 textsize 14
            }
            Fl_Light_Button DisplayWireframeShadedButton {
              label Shaded
              callback {MVC->SetDisplayWireframeShaded(o->value());}
              xywh {1280 85 75 20} selection_color 63
            }
            Fl_Value_Slider PolygonOpasitySlider {
              label Opa
              callback {MVC->SetPolygonOpasity(o->value());
MVC->redraw();}
              xywh {870 170 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
          }
          Fl_Group {} {
            label {GCode rendering} open
            xywh {835 400 535 185} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button DisplayGCodeButton {
              label {Display GCode}
              callback {MVC->SetDisplayGCode(o->value());
MVC->redraw();}
              xywh {870 410 220 20} value 1 selection_color 63
            }
            Fl_Value_Slider GCodeExtrudeValSlider {
              label Val
              callback {MVC->SetGCodeExtrudeVal(o->value());
MVC->redraw();}
              xywh {870 475 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider GCodeExtrudeSatSlider {
              label Sat
              callback {MVC->SetGCodeExtrudeSat(o->value());
MVC->redraw();}
              xywh {870 455 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider GCodeExtrudeHueSlider {
              label Hue
              callback {MVC->SetGCodeExtrudeHue(o->value());
MVC->redraw();}
              xywh {870 435 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Light_Button LuminanceShowsSpeedButton {
              label {Luminance shows speed}
              callback {MVC->SetLuminanceShowsSpeed(o->value());
MVC->redraw();}
              xywh {1135 410 220 20} value 1 selection_color 63
            }
            Fl_Button {} {
              label {Crop Range}
              callback {float start = GCodeDrawStartSlider->value();
float end = GCodeDrawEndSlider->value();
GCodeDrawStartSlider->range(start,end);
GCodeDrawEndSlider->range(start,end);
GCodeDrawStartSlider->redraw();
GCodeDrawEndSlider->redraw();}
              xywh {870 550 220 20}
            }
            Fl_Button {} {
              label {Reset crop range}
              callback {GCodeDrawStartSlider->range(0,1);
GCodeDrawEndSlider->range(0,1);
GCodeDrawStartSlider->redraw();
GCodeDrawEndSlider->redraw();}
              xywh {1140 550 220 20}
            }
            Fl_Slider GCodeDrawStartSlider {
              label From
              callback {MVC->SetGCodeDrawStart(o->value());}
              xywh {870 500 490 20} type {Horz Knob} color 39 selection_color 2 align 4
            }
            Fl_Slider GCodeDrawEndSlider {
              label To
              callback {MVC->SetGCodeDrawEnd(o->value());}
              xywh {870 525 490 20} type {Horz Knob} color 39 selection_color 2 align 4
            }
            Fl_Value_Slider GCodeMoveValSlider {
              label Val
              callback {MVC->SetGCodeMoveVal(o->value());
MVC->redraw();}
              xywh {1135 475 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider GCodeMoveSatSlider {
              label Sat
              callback {MVC->SetGCodeMoveSat(o->value());
MVC->redraw();}
              xywh {1135 455 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
            Fl_Value_Slider GCodeMoveHueSlider {
              label Hue
              callback {MVC->SetGCodeMoveHue(o->value());
MVC->redraw();}
              xywh {1135 435 220 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
            }
          }
          Fl_Group {} {
            label {Layer preview} open
            xywh {835 605 540 90} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Slider CuttingPlaneValueSlider {
              label Cuttingplane
              callback {MVC->SetCuttingPlaneValue(o->value());}
              xywh {845 665 515 20} type {Horz Knob} align 5 value 0.5 textsize 14
            }
            Fl_Light_Button DisplayCuttingPlaneButton {
              label {Display CuttingPlane}
              callback {MVC->SetDisplayCuttingPlane(o->value());}
              xywh {845 620 170 20} selection_color 63
            }
            Fl_Light_Button DisplayinFillButton {
              label {Display inFill}
              callback {MVC->SetDisplayinFill(o->value());}
              xywh {1020 620 165 20} selection_color 63
            }
            Fl_Light_Button DisplayAllLayersButton {
              label {Display all layers}
              callback {MVC->SetDisplayAllLayers(o->value());}
              xywh {1190 620 170 20} selection_color 63
            }
          }
          Fl_Group {} {
            label Lights open
            xywh {835 715 540 70} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button {} {
              label {Enable light 0}
              callback {MVC->SetEnableLight(0, o->value());}
              xywh {845 730 120 20} value 1 selection_color 63
            }
            Fl_Light_Button {} {
              label {Enable light 1}
              callback {MVC->SetEnableLight(1, o->value());}
              xywh {845 755 120 20} selection_color 63
            }
            Fl_Light_Button {} {
              label {Enable light 2}
              callback {MVC->SetEnableLight(2, o->value());}
              xywh {1105 730 120 20} selection_color 63
            }
            Fl_Light_Button {} {
              label {Enable light 3}
              callback {MVC->SetEnableLight(3, o->value());}
              xywh {1105 755 120 20} value 1 selection_color 63
            }
            Fl_Button {} {
              label {Edit light 0}
              xywh {970 730 130 20} deactivate
            }
            Fl_Button {} {
              label {Edit light 1}
              xywh {970 755 130 20} deactivate
            }
            Fl_Button {} {
              label {Edit light 2}
              xywh {1230 730 130 20} deactivate
            }
            Fl_Button {} {
              label {Edit light 3}
              xywh {1230 755 130 20} deactivate
            }
          }
        }
        Fl_Group {} {
          label Print open
          xywh {835 50 560 800} color 47
        } {
          Fl_Tabs {} {open
            xywh {835 220 540 595}
          } {
            Fl_Browser CommunationLog {
              label {Communication log}
              xywh {840 245 530 565} selection_color 31 align 16 hide
              code0 {\#include <FL/Fl_Multi_Browser.H>}
              class Fl_Multi_Browser
            }
            Fl_Browser ErrorLog {
              label {Errors / warnings}
              xywh {840 245 530 565} selection_color 31 align 16 hide
              code0 {\#include <FL/Fl_Multi_Browser.H>}
              class Fl_Multi_Browser
            }
            Fl_Browser Echo {
              label Echo
              xywh {840 245 530 565} selection_color 31 align 16 hide
              code0 {\#include <FL/Fl_Multi_Browser.H>}
              class Fl_Multi_Browser
            }
            Fl_Group {} {
              label {Interactive control} open
              xywh {840 245 535 565} selection_color 31 align 16
            } {
              Fl_Light_Button SwitchHeatOnButton {
                label {Switch heat on}
                callback {MVC->SwitchHeat(o->value(), TargetTempText->value());}
                xywh {845 430 220 25}
              }
              Fl_Value_Input TargetTempText {
                label {Target temp}
                callback {MVC->SetTargetTemp(o->value());}
                xywh {1300 431 55 24} maximum 300 value 200
              }
              Fl_Light_Button RunExtruderButton {
                label {Run extruder}
                callback {MVC->RunExtruder();}
                xywh {845 460 115 25}
              }
              Fl_Light_Button SetExtruderDirectionButton {
                label Reverse
                callback {MVC->SetExtruderDirection(o->value());}
                xywh {965 460 100 25}
              }
              Fl_Button {} {
                label Home
                callback {MVC->Home("X");}
                xywh {855 250 83 25}
              }
              Fl_Button {} {
                label Home
                callback {MVC->Home("Y");}
                xywh {855 280 83 25}
              }
              Fl_Button {} {
                label Home
                callback {MVC->Home("Z");}
                xywh {855 310 83 25}
              }
              Fl_Button {} {
                label {Find position in Gcode}
                xywh {1175 340 173 25} deactivate
              }
              Fl_Value_Slider {} {
                label Speed
                callback {MVC->SetExtruderSpeed(o->value());}
                xywh {1120 460 235 25} type {Horz Knob} align 4 minimum 5 maximum 9999 step 1 value 3000 textsize 14
              }
              Fl_Value_Slider {} {
                label Length
                callback {MVC->SetExtruderLength(o->value());}
                xywh {1120 490 235 25} type {Horz Knob} align 4 minimum 10 maximum 850 step 1 value 150 textsize 14
              }
              Fl_Input GCodeInput {
                label GCode
                callback {MVC->SendNow(o->value());}
                xywh {905 365 375 25} when 8
              }
              Fl_Button {} {
                label Send
                callback {MVC->SendNow(GCodeInput->value());}
                xywh {1285 365 68 25}
              }
              Fl_Output CurrentTempText {
                label {Current temp}
                xywh {1160 431 55 24}
              }
              Fl_Button {} {
                label {Home all}
                callback {MVC->Home("ALL");}
                xywh {855 340 85 25}
              }
              Fl_Button {} {
                label {-10}
                callback {MVC->Move("X", -10);}
                xywh {995 250 40 25}
              }
              Fl_Button {} {
                label {-1}
                callback {MVC->Move("X", -1);}
                xywh {1040 250 40 25}
              }
              Fl_Button {} {
                label {-0.1}
                callback {MVC->Move("X", -0.1f);}
                xywh {1085 250 40 25}
              }
              Fl_Button {} {
                label {+0.1}
                callback {MVC->Move("X", 0.1f);}
                xywh {1175 250 40 25}
              }
              Fl_Button {} {
                label {+1}
                callback {MVC->Move("X", 1);}
                xywh {1220 250 40 25}
              }
              Fl_Button {} {
                label {+10}
                callback {MVC->Move("X", 10);}
                xywh {1265 250 40 25}
              }
              Fl_Button {} {
                label {-100}
                callback {MVC->Move("X", -100);}
                xywh {950 250 40 25}
              }
              Fl_Button {} {
                label {+100}
                callback {MVC->Move("X", 100);}
                xywh {1310 250 40 25}
              }
              Fl_Button {} {
                label {-10}
                callback {MVC->Move("Y", -10);}
                xywh {995 280 40 25}
              }
              Fl_Button {} {
                label {-1}
                callback {MVC->Move("Y", -1);}
                xywh {1040 280 40 25}
              }
              Fl_Button {} {
                label {-0.1}
                callback {MVC->Move("Y", -0.1f);}
                xywh {1085 280 40 25}
              }
              Fl_Button {} {
                label {+0.1}
                callback {MVC->Move("Y", 0.1f);}
                xywh {1175 280 40 25}
              }
              Fl_Button {} {
                label {+1}
                callback {MVC->Move("Y", 1);}
                xywh {1220 280 40 25}
              }
              Fl_Button {} {
                label {+10}
                callback {MVC->Move("Y", 10);}
                xywh {1265 280 40 25}
              }
              Fl_Button {} {
                label {-100}
                callback {MVC->Move("Y", -100);}
                xywh {950 280 40 25}
              }
              Fl_Button {} {
                label {+100}
                callback {MVC->Move("Y", 100);}
                xywh {1310 280 40 25}
              }
              Fl_Button {} {
                label {-10}
                callback {MVC->Move("Z", -10);}
                xywh {995 310 40 25}
              }
              Fl_Button {} {
                label {-1}
                callback {MVC->Move("Z", -1);}
                xywh {1040 310 40 25}
              }
              Fl_Button {} {
                label {-0.1}
                callback {MVC->Move("Z", -0.1f);}
                xywh {1085 310 40 25}
              }
              Fl_Button {} {
                label {+0.1}
                callback {MVC->Move("Z", 0.1f);}
                xywh {1175 310 40 25}
              }
              Fl_Button {} {
                label {+1}
                callback {MVC->Move("Z", 1);}
                xywh {1220 310 40 25}
              }
              Fl_Button {} {
                label {+10}
                callback {MVC->Move("Z", 10);}
                xywh {1265 310 40 25}
              }
              Fl_Button {} {
                label {-100}
                callback {MVC->Move("Z", -100);}
                xywh {950 310 40 25}
              }
              Fl_Button {} {
                label {+100}
                callback {MVC->Move("Z", 100);}
                xywh {1310 310 40 25}
              }
              Fl_Value_Input XposText {
                callback {MVC->Goto("X", o->value());}
                xywh {1130 251 40 24} maximum 500
              }
              Fl_Value_Input YposText {
                callback {MVC->Goto("Y", o->value());}
                xywh {1130 281 40 24} maximum 500
              }
              Fl_Value_Input ZposText {
                callback {MVC->Goto("Z", o->value());}
                xywh {1130 311 40 24} maximum 500
              }
              Fl_Value_Slider DownstreamMultiplierSlider {
                label {Downstream speed multiplier}
                xywh {845 525 510 25} type {Horz Knob} align 5 minimum 0.01 maximum 5 value 1 textsize 14
              }
              Fl_Value_Slider TempUpdateSpeedSlider {
                label {Temperature update interval}
                callback {MVC->SetTempUpdateSpeed(o->value());}
                xywh {1030 400 235 25} type {Horz Knob} align 4 minimum 0.1 maximum 10 step 0.1 value 3 textsize 14
              }
              Fl_Light_Button AutoscrollButton {
                label {Auto scroll}
                xywh {845 570 105 25} value 1 selection_color 2
              }
              Fl_Value_Slider LinesToKeepSlider {
                label {Keep only the last \# lines:}
                callback {MVC->SetKeepLines(o->value());}
                xywh {955 570 400 25} type {Horz Knob} align 5 minimum 100 maximum 100000 step 1 value 1000 textsize 14
              }
              Fl_Light_Button FileLogginEnabledButton {
                label LogFiles
                callback {MVC->SetFileLogging(o->value());}
                xywh {845 600 105 25} value 1 selection_color 2
              }
              Fl_Light_Button TempReadingEnabledButton {
                label Enable
                callback {MVC->EnableTempReading(o->value());}
                xywh {1270 400 85 25} value 1 selection_color 2
              }
              Fl_Light_Button ClearLogfilesWhenPrintStartsButton {
                label {Clear logs when print starts}
                callback {MVC->SetLogFileClear(o->value());}
                xywh {955 600 205 25} value 1 selection_color 2
              }
              Fl_Button {} {
                label {Clear logs now}
                callback {MVC->ClearLogs();}
                xywh {1210 600 145 25}
              }
            }
          }
          Fl_Group {} {
            label Print open
            xywh {835 70 540 45} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button ConnectToPrinterButton {
              label {Connect to printer}
              callback {MVC->ConnectToPrinter(o->value());}
              xywh {840 80 135 25} selection_color 2
            }
            Fl_Light_Button PrintButton {
              label Print
              callback {if(o->value())
{
o->label("Pause");
MVC->Print();
ContinueButton->deactivate();
}
else
{
o->label("Restart");
MVC->Pause();
ContinueButton->activate();
}}
              xywh {1075 80 90 25} selection_color 2
            }
            Fl_Button ContinueButton {
              label Continue
              callback {MVC->Continue();
PrintButton->label("Pause");
PrintButton->value(1);
o->deactivate();}
              xywh {1170 80 95 25} deactivate
            }
            Fl_Light_Button {} {
              label {Power on}
              callback {MVC->SwitchPower(o->value());}
              xywh {980 80 90 25} selection_color 2
            }
            Fl_Button KickButton {
              label Kick
              callback {MVC->Continue();} selected
              xywh {1270 80 95 25}
            }
          }
          Fl_Group {} {
            label Feedback open
            xywh {840 180 540 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button {} {
              label Errors
              callback {MVC->serial.SetDebugMask(DEBUG_ERRORS, (bool)o->value());}
              xywh {850 190 165 20} value 1 selection_color 2
            }
            Fl_Light_Button {} {
              label Info
              callback {MVC->serial.SetDebugMask(DEBUG_INFO, (bool)o->value());}
              xywh {1020 190 165 20} value 1 selection_color 2
            }
            Fl_Light_Button {} {
              label Echo
              callback {MVC->serial.SetDebugMask(DEBUG_ECHO, (bool)o->value());}
              xywh {1190 190 165 20} value 1 selection_color 2
            }
          }
          Fl_Light_Button DisplayDebuginFillButton {
            label {Display Debug inFill}
            callback {MVC->SetDisplayDebuginFill(o->value());}
            xywh {920 830 145 15} selection_color 63
          }
          Fl_Light_Button DisplayDebugButton {
            label Debug
            callback {if(o->value())
{
DisplayDebuginFillButton->show();
ExamineSlider->show();
}
else
{
DisplayDebuginFillButton->hide();
ExamineSlider->hide();
}


MVC->redraw();}
            xywh {845 830 70 15} selection_color 63
          }
          Fl_Light_Button DrawVertexNumbersButton {
            label {Draw vertex numbers}
            callback {MVC->SetDrawVertexNumbers(o->value());}
            xywh {1070 830 155 15} selection_color 63
          }
          Fl_Light_Button DrawLineNumbersButton {
            label {Draw line numbers}
            callback {MVC->SetDrawLineNumbers(o->value());}
            xywh {1225 830 155 15} selection_color 63
          }
          Fl_Value_Slider ExamineSlider {
            label Examine
            callback {MVC->SetExamine(o->value());}
            xywh {900 815 200 15} type Horizontal align 4 step 0.001 value 0.098 textsize 14
          }
          Fl_Group {} {
            label Fan open
            xywh {840 130 540 35} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button FanOnButton {
              label {Fan on}
              callback {MVC->SetFan(o->value() ? FanPowerSlider->value() : 0);}
              xywh {845 135 85 25} selection_color 2
            }
            Fl_Value_Slider FanPowerSlider {
              label Voltage
              callback {FanOnButton->value(true);
MVC->SetFan(o->value()*(255.0f/12.0f));}
              xywh {995 135 375 25} type {Horz Knob} align 4 when 4 maximum 12 value 5 textsize 14
            }
          }
        }
      }
      Fl_Progress ProgressBar {
        label {Progress:}
        xywh {75 5 755 15} selection_color 63 align 4
      }
    }
  }
  Function {show(int argc, char **argv)} {open
  } {
    code {Fl::visual( FL_DOUBLE | FL_RGB);
Fl::scheme("plastic");
mainWindow->show(argc, argv);
MVC->ReadStl("C:/code/printed-parts/z-tensioner_1off.stl");
MVC->init();
MVC->CopySettingsToGUI();
MVC->draw();
MVC->redraw();
MVC->redraw();} {}
  }
} 

decl {extern GUI* gui;} {} 

Function {TempReadTimer(void *)} {open return_type void
} {
  code {if(gui->TempReadingEnabledButton->value())
{
MVC->serial.SendNow("M105");
Fl::repeat_timeout(MVC->gui ? MVC->ProcessControl.TempUpdateSpeed: 10.0f , &TempReadTimer);
}} {}
} 
